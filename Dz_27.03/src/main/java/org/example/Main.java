package org.example;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException, SQLException {
        Scanner scanner = new Scanner(System.in);
        CourseDAO courseDAO = new CourseDAO();
        StudentDAO studentDAO = new StudentDAO();

        while (true) {
            System.out.println("\nМеню:");
            System.out.println("1. Додати курс");
            System.out.println("2. Додати студента");
            System.out.println("3. Відобразити студентів курсу");
            System.out.println("4. Видалити студента з курсу");
            System.out.println("5. Відобразити курси студента");
            System.out.println("6. Вийти");
            System.out.print("Оберіть опцію: ");

            int choice = scanner.nextInt();
            scanner.nextLine();


            switch (choice) {
                case 1:
                    System.out.print("Назва курсу: ");
                    String courseName = scanner.nextLine();
                    System.out.print("Опис курсу: ");
                    String courseDesc = scanner.nextLine();
                    System.out.print("Макс. студентів: ");
                    int maxStudents = scanner.nextInt();
                    courseDAO.addCourse(new Course(courseName, courseDesc, maxStudents));
                    System.out.println("Курс додано!");
                    break;

                case 2:
                    System.out.print("Ім'я: ");
                    String firstName = scanner.nextLine();
                    System.out.print("Прізвище: ");
                    String lastName = scanner.nextLine();
                    System.out.print("Дата народження (YYYY-MM-DD): ");
                    String birthDate = scanner.nextLine();
                    System.out.print("ID курсу: ");
                    int studentCourseId = scanner.nextInt();
                    studentDAO.addStudent(new Student(firstName, lastName, java.time.LocalDate.parse(birthDate), studentCourseId));
                    System.out.println("Студента додано!");
                    break;

                case 3:
                    System.out.print("ID курсу: ");
                    int selectedCourseId = scanner.nextInt();
                    List<Student> students = studentDAO.getStudentsByCourse(selectedCourseId);
                    System.out.println("Студенти курсу:");
                    for (Student student : students) {
                        System.out.println(student);
                    }
                    break;

                case 4:
                    System.out.print("ID студента: ");
                    int studentToRemove = scanner.nextInt();
                    studentDAO.removeStudentFromCourse(studentToRemove);
                    break;

                case 5:
                    System.out.print("ID студента: ");
                    int studentId = scanner.nextInt();
                    List<Course> studentCourses = studentDAO.getCoursesByStudent(studentId);
                    if (studentCourses.isEmpty()) {
                        System.out.println("Студент не навчається на жодному курсі.");
                    } else {
                        System.out.println("Курси студента:");
                        for (Course course : studentCourses) {
                            System.out.println(course);
                        }
                    }
                    break;

                case 6:
                    System.out.println("Вихід...");
                    scanner.close();
                    return;

                default:
                    System.out.println("Невірний вибір. Спробуйте знову.");
            }
        }


//        SQL-запит для створення таблиць
//        CREATE TABLE Course (
//                id number GENERATED by DEFAULT as IDENTITY primary KEY,
//                name VARCHAR2(100) NOT NULL,
//                description VARCHAR2(255),
//                max_students NUMBER NOT NULL
//        );
//
//        CREATE TABLE Student (
//                id number GENERATED by DEFAULT as IDENTITY primary KEY,
//                first_name VARCHAR2(50) NOT NULL,
//                last_name VARCHAR2(50) NOT NULL,
//                birth_date DATE NOT NULL,
//                course_id NUMBER REFERENCES Course(id) ON DELETE SET NULL
//        );
    }
}